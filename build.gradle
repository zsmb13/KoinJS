buildscript {
    ext.kotlin_version = '1.2.40'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

def GROUP_ID = 'co.zsmb'
def ARTIFACT_ID = 'koinjs'
def VERSION = '0.9.1'

group GROUP_ID
version VERSION

apply plugin: 'kotlin2js'
apply plugin: 'com.moowork.node'
apply plugin: 'maven-publish'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

repositories {
    jcenter()
    mavenCentral()
}

task jarSources(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'source'
}

artifacts {
    archives jarSources
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('bintrayUser')
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('bintrayKey')
    publications = ['mavenJava']

    pkg {
        repo = 'KoinJS'
        name = 'KoinJS'

        version {
            name = VERSION
            released = new Date()
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId GROUP_ID
            artifactId ARTIFACT_ID
            version VERSION

            from components.java

            artifact jarSources {
                classifier = 'sources'
            }
        }
    }
}

compileKotlin2Js {
    kotlinOptions {
        outputFile = "$buildDir/classes/main/koin.js"
    }
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions.moduleKind = "umd"
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    download = true
    version = "10.13.0"
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installMocha]) {
    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        script = file('node_modules/mocha/bin/mocha')
    } else {
        script = file('node_modules/.bin/mocha')
    }
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha
